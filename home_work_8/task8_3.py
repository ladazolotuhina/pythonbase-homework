# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована.
# Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число)
# и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
class MyError(Exception):
    def init(self, message):
        self.message = message


stop = None
list_a = []
while not stop:
    try:
        user_list = input('Введите любые элементы: ').split()
        for elem in user_list:
            if elem.isdigit():
                list_a.append(elem)
                #print(list_a)
                input('Хотите закончить ввод? Введите "stop". Если нет, то продолжите нажатием "Enter"')
            elif elem == 'stop':
                stop = True
                break
            else:
                raise MyError('Введите элемент другого типа. Попробуйте еще раз! \n')
    except MyError as text:
        print(text)

print(f'Получен список элементов: {list_a}')

